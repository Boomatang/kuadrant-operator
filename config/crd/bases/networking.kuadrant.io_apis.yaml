
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: apis.networking.kuadrant.io
spec:
  group: networking.kuadrant.io
  names:
    kind: Api
    listKind: ApiList
    plural: apis
    singular: api
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Api is the Schema for the apis API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApiSpec defines the desired state of Api
            properties:
              backendServers:
                items:
                  properties:
                    name:
                      type: string
                    serviceRef:
                      description: ServiceReference holds a reference to Service.legacy.k8s.io
                      properties:
                        name:
                          description: name is the name of the service. Required
                          type: string
                        namespace:
                          description: namespace is the namespace of the service.
                            Required
                          type: string
                        path:
                          description: path is an optional URL path at which the webhook
                            will be contacted.
                          type: string
                        port:
                          description: port is an optional service port at which the
                            webhook will be contacted. `port` should be a valid port
                            number (1-65535, inclusive). Defaults to 443 for backward
                            compatibility.
                          format: int32
                          type: integer
                      required:
                      - name
                      - namespace
                      type: object
                  required:
                  - name
                  - serviceRef
                  type: object
                type: array
              hosts:
                items:
                  type: string
                type: array
              operations:
                items:
                  properties:
                    backendServerName:
                      type: string
                    id:
                      type: string
                    method:
                      type: string
                    name:
                      type: string
                    path:
                      type: string
                    security:
                      items:
                        properties:
                          Oauth2:
                            items:
                              type: string
                            type: array
                          apiKeyAuth:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                  required:
                  - backendServerName
                  - id
                  - method
                  - name
                  - path
                  type: object
                type: array
              securityScheme:
                items:
                  properties:
                    apiKeyAuth:
                      properties:
                        APIKeySelector:
                          description: A label selector is a label query over a set
                            of resources. The result of matchLabels and matchExpressions
                            are ANDed. An empty label selector matches all objects.
                            A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        location:
                          type: string
                        name:
                          type: string
                      required:
                      - APIKeySelector
                      - location
                      - name
                      type: object
                    name:
                      type: string
                    openIDConnectAuth:
                      properties:
                        url:
                          type: string
                      required:
                      - url
                      type: object
                  required:
                  - name
                  type: object
                type: array
            required:
            - backendServers
            - hosts
            - operations
            type: object
          status:
            description: ApiStatus defines the observed state of Api
            properties:
              observedGeneration:
                format: int64
                type: integer
              ready:
                type: boolean
            required:
            - observedGeneration
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
